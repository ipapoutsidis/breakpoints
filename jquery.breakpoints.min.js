/*
 * @license jQuery Breakpoints | MIT | Jerry Low | https://www.github.com/jerrylow/breakpoints
 */
!function(e){var t=function(t,n){var i=this;i.n="breakpoints",i.settings={},i.currentBp=null,i.getBreakpoint=function(){var t,n=e(window).width(),r=i.settings.breakpoints;return r.forEach(function(e){n>=e.width&&(t=e.name)}),t||(t=r[r.length-1].name),t},i.getBreakpointWidth=function(e){var t;return i.settings.breakpoints.forEach(function(n){e==n.name&&(t=n.width)}),t},i.compareCheck=function(t,n,r){var a=e(window).width(),s=i.settings.breakpoints,o=i.getBreakpointWidth(n),g=!1;switch(t){case"lessThan":g=a<o;break;case"lessEqualTo":g=a<=o;break;case"greaterThan":case"greaterEqualTo":g=a>o;break;case"inside":var u=s.findIndex(function(e){return e.name===n});if(u===s.length-1)g=a>o;else{var d=i.getBreakpointWidth(s[u+1].name);g=a>=o&&a<d}}g&&r()},i.destroy=function(){e(window).unbind(i.n)};var r=function(){var t=e(window).width(),n=i.settings.breakpoints,r=i.currentBp;n.forEach(function(n){r===n.name?n.inside||(e(window).trigger("inside-"+n.name),n.inside=!0):n.inside=!1,t<n.width&&(n.less||(e(window).trigger("lessThan-"+n.name),n.less=!0,n.greater=!1,n.greaterEqual=!1)),t>=n.width&&(n.greaterEqual||(e(window).trigger("greaterEqualTo-"+n.name),n.greaterEqual=!0,n.less=!1),t>n.width&&(n.greater||(e(window).trigger("greaterThan-"+n.name),n.greater=!0,n.less=!1)))})},a=e.extend({},e.fn.breakpoints.defaults,n);i.settings={breakpoints:a.breakpoints,buffer:a.buffer,triggerOnInit:a.triggerOnInit},t.data(i.n,this),i.currentBp=i.getBreakpoint();var s=null;e.isFunction(e(window).on)&&e(window).on("resize."+i.n,function(t){s&&clearTimeout(s),s=setTimeout(function(t){var n;(n=i.getBreakpoint())!==i.currentBp&&(e(window).trigger({type:"breakpoint-change",from:i.currentBp,to:n}),i.currentBp=n),r()},i.settings.buffer)}),i.settings.triggerOnInit&&setTimeout(function(){e(window).trigger({type:"breakpoint-change",from:i.currentBp,to:i.currentBp,initialInit:!0})},i.settings.buffer),setTimeout(function(){r()},0)};e.fn.breakpoints=function(e,n,i){if(this.data("breakpoints")){var r=this.data("breakpoints");return"getBreakpoint"===e?r.getBreakpoint():"getBreakpointWidth"===e?r.getBreakpointWidth(n):["lessThan","lessEqualTo","greaterThan","greaterEqualTo","inside"].includes(e)?r.compareCheck(e,n,i):void("destroy"===e&&r.destroy())}new t(this,e)},e.fn.breakpoints.defaults={breakpoints:[{name:"xs",width:0},{name:"sm",width:768},{name:"md",width:992},{name:"lg",width:1200}],buffer:300,triggerOnInit:!1}}(jQuery);
